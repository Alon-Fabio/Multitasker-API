{"version":3,"sources":["Style/images/face-detection.png","Style/images/graph.png","components/FaceRecognition/FaceRecognition.tsx","components/Profile/ProfileIcon.tsx","components/Navigation/Navigation.tsx","components/Signin/Signin.tsx","components/Register/Register.tsx","components/Logo/Logo.tsx","components/ImageLinkForm/ImageLinkForm.tsx","components/Rank/Rank.tsx","components/Modals/Modal.tsx","App.tsx","components/Profile/Profile.tsx","registerServiceWorker.js","index.js"],"names":["module","exports","FaceRecognition","imageUrl","boxes","className","alt","id","src","width","height","map","box","i","key","style","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","ProfileIcon","onRouteChange","toggleModal","useState","dropdownOpen","setDropdownOpen","Dropdown","isOpen","toggle","prevState","DropdownToggle","tag","data-toggle","aria-expanded","DropdownMenu","marginTop","backgroundColor","DropdownItem","onClick","Navigation","isSignedIn","display","justifyContent","defaultProps","React","memo","Signin","fetchProfile","stage","useReducer","signInState","type","payload","email","password","console","error","Error","signInDispatch","onSubmitSignIn","event","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","json","data","token","userId","success","window","sessionStorage","setItem","catch","log","htmlFor","autoComplete","name","onChange","target","value","Register","useEffect","document","getElementById","reset","useForm","register","handleSubmit","onSubmit","formData","pattern","title","ref","required","Logo","image","context","onRouteChangeObj","route","options","max","ImageLinkForm","onInputChange","onButtonSubmit","Rank","entries","emoji","setEmoji","undefined","rankEmoji","toString","input","err","modalRoot","Modal","children","createElement","el","appendChild","removeChild","ReactDOM","createPortal","propTypes","PropTypes","shape","$$typeof","symbol","number","props","object","func","Profile","user","loadUser","ageError","setAgeError","age","pet","ProState","action","isNaN","dispatch","Date","joined","toLocaleDateString","placeholder","Authentication","getItem","formInput","status","alert","stageOfBuild","startPoint","particlesOptions","particles","density","enable","value_area","App","setUser","isProfileOpen","setIsProfileOpen","setIsSignedIn","loading","setLoading","setRoute","setBoxes","setImageUrl","setInput","SubmitTimeout","setSubmitTimeout","displayFaceBox","removeItem","params","faceDetectPic","graphPic","setTimeout","code","count","outputs","regions","face","clarifaiFace","region_info","bounding_box","Number","offsetWidth","offsetHeight","left_col","top_row","right_col","bottom_row","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","render","URL","process","origin","addEventListener","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.e2388f64.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/face-detection.d7a0ecb7.png\";","module.exports = __webpack_public_path__ + \"static/media/graph.3513f139.png\";","import * as React from \"react\";\nimport * as PropTypes from \"prop-types\";\nimport \"./FaceRecognition.css\";\n\ninterface IProps {\n  imageUrl: string;\n  boxes: {\n    leftCol: number;\n    topRow: number;\n    rightCol: number;\n    bottomRow: number;\n  }[];\n}\ninterface IBoxMap {\n  topRow: number;\n  leftCol: number;\n  rightCol: number;\n  bottomRow: number;\n}\n\n\nconst FaceRecognition: React.FC<{ imageUrl: string; boxes: any; stage: string }> = ({\n  imageUrl,\n  boxes,\n}): JSX.Element => {\n \n  return (\n    <div >\n    <div className=\"center\">\n    <img className=\"ma2\"\n          alt=\"\"\n          id=\"inputimage\"\n          src={imageUrl}\n          width=\"500px\"\n          height=\"auto\"\n        />\n      <div className=\"ma2 absolute block\">\n        <img\n          id=\"inputimage\"\n          alt=\"\"\n          src={imageUrl}\n          width=\"500px\"\n          height=\"auto\"\n        />\n        {boxes.map(\n          (box: IBoxMap, i: number): JSX.Element => {\n            return (\n              <div\n                key={i}\n                className=\"bounding-box\"\n                style={{\n                  top: box.topRow,\n                  right: box.rightCol,\n                  bottom: box.bottomRow,\n                  left: box.leftCol,\n                }}\n              ></div>\n            );\n          }\n        )}\n      </div>\n    </div>\n    </div>\n  );\n};\n\nFaceRecognition.propTypes = {\n  imageUrl: PropTypes.string.isRequired,\n  boxes: PropTypes.arrayOf(\n    PropTypes.shape({\n      leftCol: PropTypes.number.isRequired,\n      topRow: PropTypes.number.isRequired,\n      rightCol: PropTypes.number.isRequired,\n      bottomRow: PropTypes.number.isRequired,\n    }).isRequired\n  ).isRequired,\n  stage: PropTypes.string.isRequired\n};\n\nexport default FaceRecognition;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Dropdown,\n  DropdownMenu,\n  DropdownToggle,\n  DropdownItem,\n} from \"reactstrap\";\n\ninterface IProIcoProps {\n  onRouteChange(route: string): void;\n  toggleModal(): void;\n}\n\nconst ProfileIcon: React.FC<IProIcoProps> = ({\n  onRouteChange,\n  toggleModal,\n}) => {\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n\n  const toggle = () => setDropdownOpen((prevState) => !prevState);\n\n  return (\n    <div className=\"pa4 tc\">\n      <Dropdown isOpen={dropdownOpen} toggle={toggle}>\n        <DropdownToggle\n          tag=\"span\"\n          data-toggle=\"dropdown\"\n          aria-expanded={dropdownOpen}\n        >\n          <img\n            src=\"http://tachyons.io/img/logo.jpg\"\n            className=\"br-100 pa1 ba b--black-10 h3 w3\"\n            alt=\"avatar\"\n          />\n        </DropdownToggle>\n        <DropdownMenu\n          right\n          className=\"b--transparent shadow-5\"\n          style={{\n            marginTop: \"20px\",\n            backgroundColor: \"rgba(255,255,255,0.5)\",\n          }}\n        >\n          <DropdownItem onClick={toggleModal}>Profile</DropdownItem>\n          <DropdownItem onClick={() => onRouteChange(\"signout\")}>\n            Sign Out\n          </DropdownItem>\n        </DropdownMenu>\n      </Dropdown>\n    </div>\n  );\n};\n\nProfileIcon.propTypes = {\n  onRouteChange: PropTypes.func.isRequired,\n  toggleModal: PropTypes.func.isRequired,\n};\n\nexport default ProfileIcon;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ProfileIcon from \"../Profile/ProfileIcon\";\n\ninterface NavProps {\n  onRouteChange(route: string): void;\n  isSignedIn: boolean;\n  toggleModal(): void;\n}\n\nconst Navigation: React.FC<NavProps> = ({\n  onRouteChange,\n  isSignedIn,\n  toggleModal,\n}) => {\n  if (isSignedIn) {\n    return (\n      <nav style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n        <ProfileIcon onRouteChange={onRouteChange} toggleModal={toggleModal} />\n      </nav>\n    );\n  } else {\n    return (\n      <nav style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n        <p\n          onClick={() => onRouteChange(\"signin\")}\n          className=\"f3 link dim underline pa3 pointer\"\n        >\n          Sign In\n        </p>\n        <p\n          onClick={() => onRouteChange(\"register\")}\n          className=\"f3 link dim underline pa3 pointer\"\n        >\n          Register\n        </p>\n      </nav>\n    );\n  }\n};\n\nNavigation.propTypes = {\n  onRouteChange: PropTypes.func.isRequired,\n  isSignedIn: PropTypes.bool.isRequired,\n  toggleModal: PropTypes.func.isRequired,\n};\n\nNavigation.defaultProps = {\n  isSignedIn: false,\n};\nexport default React.memo(Navigation);\n","import React, { useReducer } from \"react\";\nimport PropTypes, { string } from \"prop-types\";\n\ninterface ISigProps {\n  fetchProfile(token: string, id: number | null): void;\n  onRouteChange(route: string): void;\n  stage: string;\n}\n\ninterface ISgnRedState {\n  email: string;\n  password: string;\n}\ninterface ISigRedAction {\n  type: \"CHANGE_PASS\" | \"CHANGE_EMAIL\";\n  payload: string;\n}\n\nconst Signin: React.FC<ISigProps> = ({\n  fetchProfile,\n  onRouteChange,\n  stage,\n}) => {\n  const signInReducer = (\n    signInState: ISgnRedState,\n    { type, payload }: ISigRedAction\n  ): ISgnRedState => {\n    // signInState === {signInEmail: string,signInPassword:string}\n    // action === {type: \"CHANGE_EMAIL\" || \"CHANGE_PASS\", payload:string}\n\n    switch (type) {\n      case \"CHANGE_EMAIL\":\n        return { ...signInState, email: payload };\n      case \"CHANGE_PASS\":\n        return { ...signInState, password: payload };\n      default:\n        console.error(new Error(\"FormReducer type is not valid\"));\n        return signInState;\n    }\n  };\n  const [signInState, signInDispatch] = useReducer(signInReducer, {\n    email: \"\",\n    password: \"\",\n  });\n\n  const saveAuthTokenInSessions = (token: string) => {\n    window.sessionStorage.setItem(\"SmartBrainToken\", token);\n  };\n\n  const onSubmitSignIn = (\n    event: React.MouseEvent<HTMLInputElement, MouseEvent>\n  ) => {\n    event.preventDefault();\n    fetch(`http://${stage}/signin`, {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(signInState),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.userId && data.success === \"true\") {\n          saveAuthTokenInSessions(data.token);\n          fetchProfile(data.token, data.userId);\n        }\n      })\n      .catch(console.log);\n  };\n\n  return (\n    <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\n      <main className=\"pa4\">\n        <form className=\"measure\">\n          <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n            <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\n            <div className=\"mt3\">\n              <label className=\"db fw6 lh-copy f6\" htmlFor=\"email\">\n                Email\n              </label>\n              <input\n                className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                type=\"email\"\n                autoComplete=\"email\"\n                name=\"email\"\n                id=\"email\"\n                onChange={(event) =>\n                  signInDispatch({\n                    type: \"CHANGE_EMAIL\",\n                    payload: event.target.value,\n                  })\n                }\n              />\n            </div>\n            <div className=\"mv3\">\n              <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">\n                Password\n              </label>\n              <input\n                className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                type=\"password\"\n                autoComplete=\"current-password\"\n                name=\"password\"\n                id=\"password\"\n                onChange={(event) =>\n                  signInDispatch({\n                    type: \"CHANGE_PASS\",\n                    payload: event.target.value,\n                  })\n                }\n              />\n            </div>\n          </fieldset>\n          <div className=\"\">\n            <input\n              onClick={(event) => onSubmitSignIn(event)}\n              className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib input-signin\"\n              type=\"submit\"\n              value=\"Sign in\"\n            />\n          </div>\n          <div className=\"lh-copy mt3\">\n            <p\n              onClick={() => onRouteChange(\"register\")}\n              className=\"f6 link dim db pointer\"\n            >\n              Register\n            </p>\n          </div>\n        </form>\n      </main>\n    </article>\n  );\n};\n\nSignin.propTypes = {\n  fetchProfile: PropTypes.func.isRequired,\n  onRouteChange: PropTypes.func.isRequired,\n  stage: PropTypes.string.isRequired,\n};\n\nexport default Signin;\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useForm } from \"react-hook-form\";\n\ninterface IInputs {\n  email: string;\n  password: string;\n  name: string;\n}\n\nconst Register: React.FC<{\n  fetchProfile(token: string, id: number | null): void;\n  stage: string;\n}> = ({ fetchProfile, stage }) => {\n  useEffect(() => {\n    const cancelCourse = () => {\n      (document.getElementById(\"registerForm\") as HTMLFormElement).reset();\n    };\n    cancelCourse();\n  }, []);\n\n  const { register, handleSubmit } = useForm<IInputs>();\n\n  const saveAuthTokenInSessions = (token: string): void => {\n    window.sessionStorage.setItem(\"SmartBrainToken\", token);\n  };\n\n  const onSubmitSignIn = (formData: IInputs) => {\n    // Enter validation here\n    if (formData.password !== \"\" && formData.email !== \"\") {\n      fetch(`http://${stage}/register`, {\n        method: \"post\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(formData),\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          if (data) {\n            fetchProfile(data.token, data.userId);\n            saveAuthTokenInSessions(data.token);\n          }\n        });\n    }\n  };\n\n  return (\n    <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\n      <main className=\"pa4\">\n        <form\n          id=\"registerForm\"\n          className=\"measure\"\n          onSubmit={handleSubmit(onSubmitSignIn)}\n        >\n          <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n            <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\n            <div className=\"mt3\">\n              <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">\n                Name\n              </label>\n              <input\n                className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                type=\"text\"\n                name=\"name\"\n                autoComplete=\"name\"\n                id=\"name\"\n                pattern=\"(?=.*[a-z])(?=.*[A-Z]).{2,}\"\n                title=\"Must contain at least one uppercase and lowercase letter, and at least 2 characters long.\"\n                ref={register({\n                  required: true,\n                  pattern: /(?=.*[a-z])(?=.*[A-Z])/i,\n                })}\n              />\n            </div>\n            <div className=\"mt3\">\n              <label className=\"db fw6 lh-copy f6\" htmlFor=\"email\">\n                Email\n              </label>\n              <input\n                className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                type=\"email\"\n                autoComplete=\"email\"\n                name=\"email\"\n                id=\"email\"\n                ref={register({ required: true })}\n              />\n            </div>\n            <div className=\"mv3\">\n              <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">\n                Password\n              </label>\n              <input\n                className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                type=\"password\"\n                name=\"password\"\n                autoComplete=\"new-password\"\n                id=\"password\"\n                pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,15}\"\n                title=\"Must contain at least one  number and one uppercase and lowercase letter, and at least 8 characters long.\"\n                ref={register({ required: true })}\n              />\n            </div>\n          </fieldset>\n          <div>\n            <input\n              className=\"ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib input-register\"\n              type=\"submit\"\n              value=\"Register\"\n            />\n          </div>\n        </form>\n      </main>\n    </article>\n  );\n};\n\nRegister.propTypes = {\n  fetchProfile: PropTypes.func.isRequired,\n  stage: PropTypes.string.isRequired,\n};\n\nexport default Register;\n","import React from \"react\";\nimport Tilt from \"react-tilt\";\nimport \"./Logo.css\";\n\n/// <reference path=\"./types.d.ts\"/>\n\ninterface ILogoProps {\n  image: string;\n  context: string;\n  onRouteChangeObj: {\n    onRouteChange(route: string): void;\n    route: string;\n  };\n}\n\nconst Logo: React.FC<ILogoProps> = ({ image, context, onRouteChangeObj }) => {\n  return (\n    <div\n      className=\"mt4 mb4 mt0 Logo\"\n      onClick={(event: React.MouseEvent<HTMLElement>) =>\n        onRouteChangeObj.onRouteChange(onRouteChangeObj.route)\n      }\n    >\n      <h1>{context}</h1>\n      <Tilt className=\"Tilt br4 \" options={{ max: 55 }}>\n        <div className=\"Tilt-inner pa3\">\n          <img alt=\"logo\" src={image} />\n        </div>\n      </Tilt>\n    </div>\n  );\n};\n\nexport default Logo;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./ImageLinkForm.css\";\n\ninterface IImageLinkFormProps {\n  onInputChange(event: React.ChangeEvent<HTMLInputElement>): void;\n  onButtonSubmit(event: React.MouseEvent<HTMLButtonElement, MouseEvent>): void;\n}\n\nconst ImageLinkForm: React.FC<IImageLinkFormProps> = ({\n  onInputChange,\n  onButtonSubmit,\n}) => {\n  return (\n    <div className=\"ma2 mh4\">\n      <div className=\"f3 b-400 white\">\n        <p>\n          {\n            \"This Magic Brain will detect faces in your pictures. Give it a try!\"\n          }\n        </p>\n        <p>{\"Try pasting in a url of a photo.\"}</p>\n      </div>\n      <div className=\"center\">\n        <div className=\"imageForm center pa4 br3 shadow-5\">\n          <input\n            className=\"f4 pa2 w-100 center\"\n            type=\"tex\"\n            onChange={onInputChange}\n          />\n          <button\n            className=\"grow f4 link ph3 pv2 dib white bg-light-purple\"\n            onClick={onButtonSubmit}\n          >\n            Detect\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nImageLinkForm.propTypes = {\n  onButtonSubmit: PropTypes.func.isRequired,\n  onInputChange: PropTypes.func.isRequired,\n};\n\nexport default ImageLinkForm;\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Rank: React.FC<{\n  entries: string | undefined;\n  name: string | undefined;\n}> = ({ entries, name }) => {\n  const [emoji, setEmoji] = useState(\"\");\n\n  useEffect(() => {\n    if (entries !== undefined) {\n      rankEmoji(entries);\n    }\n  }, [entries, name]);\n\n  const rankEmoji = (entries: string): void => {\n    fetch(\n      `https://x12q8i6zkb.execute-api.us-east-1.amazonaws.com/dev/rank?rank=${entries.toString()}`,\n      {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((data) => data.json())\n      .then((emoji) => {\n        if (emoji.input) {\n          setEmoji(emoji.input);\n        }\n      })\n      .catch((err) => console.log);\n  };\n\n  return (\n    <div>\n      <div className=\"white f3\">\n        {`${name}, your current entry count is...`}\n      </div>\n      <div className=\"white f1\">{entries}</div>\n      <div className=\"white f2\">{`Your Badge: ${emoji}`}</div>\n    </div>\n  );\n};\n\nRank.propTypes = {\n  entries: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n};\n\nRank.defaultProps = {\n  name: \"Ops.. we didn't get your name. But\",\n  entries: \"0\",\n};\n\nexport default Rank;\n","import { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport \"./Modal.css\";\n\nconst modalRoot: HTMLElement | null = document.getElementById(\"modal-root\");\n\nconst Modal: React.FC<React.ReactNode> = ({ children }) => {\n  const [el, setEl] = useState(document.createElement(\"div\"));\n  useEffect(() => {\n    if (modalRoot) {\n      modalRoot.appendChild(el);\n    }\n    return () => {\n      if (modalRoot) {\n        modalRoot.removeChild(el);\n      }\n    };\n  }, [el]);\n\n  return ReactDOM.createPortal(children, el);\n};\n\nModal.propTypes = {\n  children: PropTypes.shape({\n    $$typeof: PropTypes.symbol,\n    key: PropTypes.number,\n    props: PropTypes.object,\n    type: PropTypes.func,\n  }),\n};\nexport default Modal;\n","import React, { useState, useEffect } from \"react\";\nimport Particles from \"react-particles-js\";\nimport FaceRecognition from \"./components/FaceRecognition/FaceRecognition\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport Signin from \"./components/Signin/Signin\";\nimport Register from \"./components/Register/Register\";\nimport Logo from \"./components/Logo/Logo\";\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\nimport Rank from \"./components/Rank/Rank\";\nimport Modal from \"./components/Modals/Modal\";\nimport Profile from \"./components/Profile/Profile\";\nimport \"./App.css\";\nimport faceDetectPic from \"./Style/images/face-detection.png\";\nimport graphPic from \"./Style/images/graph.png\";\n\n// True for production and false for dev (dev will start at the home screen, and not the signin screen)\nif (false) {\n  var stageOfBuild = {\n    stage: \"44.204.229.83\",\n    startPoint: \"signin\",\n  };\n} else {\n  stageOfBuild = {\n    stage: \"localhost\",\n    startPoint: \"signin\",\n  };\n}\n\ninterface ICalculateFaceLocation {\n  id: string;\n  value: number;\n  region_info: {\n    bounding_box: {\n      left_col: number;\n      top_row: number;\n      right_col: number;\n      bottom_row: number;\n    };\n  };\n}\n\ninterface IBoxMap {\n  leftCol: number;\n  topRow: number;\n  rightCol: number;\n  bottomRow: number;\n}\n\nconst particlesOptions = {\n  //customize this to your liking\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 800,\n      },\n    },\n  },\n};\n\nconst App = () => {\n  interface IUser {\n    id: null | number;\n    name: string | \"\";\n    email: string | \"\";\n    entries: string | \"\";\n    joined: string | \"\";\n    age: string | \"\";\n    pet: string | \"\";\n  }\n\n  const [user, setUser] = useState<IUser>({\n    id: null,\n    name: \"\",\n    email: \"\",\n    entries: \"0\",\n    joined: \"\",\n    age: \"\",\n    pet: \"\",\n  });\n  const [stage, setStage] = useState(stageOfBuild.stage);\n  const [isProfileOpen, setIsProfileOpen] = useState(false);\n  const [isSignedIn, setIsSignedIn] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [route, setRoute] = useState(stageOfBuild.startPoint);\n  const [boxes, setBoxes] = useState<IBoxMap[]>([]);\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [input, setInput] = useState(\"\");\n  const [SubmitTimeout, setSubmitTimeout] = useState(true);\n\n  const initialState = (): void => {\n    setUser((prevState) => {\n      return {\n        ...prevState,\n        id: null,\n        name: \"\",\n        email: \"\",\n        entries: \"0\",\n        joined: \"\",\n        age: \"\",\n        pet: \"\",\n      };\n    });\n    setIsProfileOpen(false);\n    setIsSignedIn(false);\n    setLoading(false);\n    setRoute(\"signin\");\n    setBoxes([]);\n    setImageUrl(\"\");\n    setInput(\"\");\n  };\n\n  useEffect(() => {\n    const token = window.sessionStorage.getItem(\"SmartBrainToken\");\n    if (token) {\n      setLoading(() => true);\n      fetch(`http://${stage}/signin`, {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authentication: token,\n        },\n      })\n        .then((data) => data.json())\n        .then((data) => {\n          if (data && data.id) {\n            fetchProfile(token, data.id);\n          } else {\n            setLoading(() => false);\n          }\n        })\n        .catch(console.log);\n    } else {\n      setLoading(() => false);\n    }\n  }, []);\n\n  const fetchProfile = (token: string, id: number | null): void => {\n    if (id !== null && id !== undefined) {\n      fetch(`http://${stage}/profile/${id.toString()}`, {\n        method: \"get\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authentication: token,\n        },\n      })\n        .then((data) => data.json())\n        .then((user) => {\n          if (user.email) {\n            loadUser(user);\n            onRouteChange(\"home\");\n          }\n        })\n        .catch((err) => console.log);\n    }\n  };\n\n  const loadUser = (data: IUser): void => {\n    setUser((prevState: IUser): IUser => {\n      return {\n        ...prevState,\n        id: data.id,\n        name: data.name,\n        age: data.age || \"\",\n        pet: data.pet || \"\",\n        email: data.email,\n        entries: data.entries,\n        joined: data.joined,\n      };\n    });\n  };\n\n  // A bug of typescript, the map raises an union error. forced to use *any* ↓\n  const calculateFaceLocation = (data: Array<ICalculateFaceLocation>): any => {\n    if (data !== undefined || typeof data[\"id\"] === \"number\") {\n      return data.map((face: ICalculateFaceLocation) => {\n        const clarifaiFace = face.region_info.bounding_box;\n        let image = document.getElementById(\"inputimage\");\n        if (image !== null) {\n          const width = Number(image.offsetWidth);\n          const height = Number(image.offsetHeight);\n          return {\n            leftCol: clarifaiFace.left_col * width,\n            topRow: clarifaiFace.top_row * height,\n            rightCol: width - clarifaiFace.right_col * width,\n            bottomRow: height - clarifaiFace.bottom_row * height,\n          };\n        } else return [data];\n      });\n    } else return [data];\n  };\n\n  const displayFaceBox = (boxes: IBoxMap[]): void => {\n    if (boxes) {\n      setBoxes(() => boxes);\n    }\n  };\n\n  const onInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInput(event.target.value);\n  };\n\n  const onButtonSubmit = () => {\n    if (SubmitTimeout) {\n      setSubmitTimeout(false);\n      setTimeout(() => setSubmitTimeout(true), 3000);\n      if (input !== \"\") {\n        fetch(`http://${stage}/imageurl`, {\n          method: \"post\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authentication:\n              window.sessionStorage.getItem(\"SmartBrainToken\") || \"\",\n          },\n          body: JSON.stringify({\n            input: input,\n          }),\n        })\n          .then((response) => response.json())\n          .then((response) => {\n            if (response && response.status.code === undefined) {\n              displayFaceBox([]);\n              setImageUrl(\n                \"https://64.media.tumblr.com/39152183fc21b80af07e4c8146bc784b/tumblr_noqcsiGNIt1u7zqzwo1_500.gif\"\n              );\n            }\n            if (response && response.status.code !== \"10000\") {\n              setImageUrl(() => input);\n              fetch(`http://${stage}/image`, {\n                method: \"put\",\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                  Authentication:\n                    window.sessionStorage.getItem(\"SmartBrainToken\") || \"\",\n                },\n                body: JSON.stringify({\n                  id: user.id,\n                }),\n              })\n                .then((response) => response.json())\n                .then((count) => {\n                  setUser((prevState) => {\n                    return { ...prevState, entries: count };\n                  });\n                })\n                .catch((err) => {\n                  console.error(err);\n                });\n            }\n            displayFaceBox(\n              calculateFaceLocation(response.outputs[0].data.regions)\n            );\n          })\n          .catch((err) => {\n            displayFaceBox([]);\n            setImageUrl(\n              \"https://64.media.tumblr.com/39152183fc21b80af07e4c8146bc784b/tumblr_noqcsiGNIt1u7zqzwo1_500.gif\"\n            );\n            console.error(err);\n          });\n      } else {\n        displayFaceBox([]);\n        setImageUrl(\n          \"https://64.media.tumblr.com/39152183fc21b80af07e4c8146bc784b/tumblr_noqcsiGNIt1u7zqzwo1_500.gif\"\n        );\n      }\n    }\n  };\n\n  const onRouteChange = (route: string): void => {\n    if (route === \"signout\") {\n      window.sessionStorage.removeItem(\"SmartBrainToken\");\n      initialState();\n    } else if (route === \"home\") {\n      setIsSignedIn(() => true);\n    } else if (route === \"faceDetection\") {\n      setRoute(\"faceDetection\");\n    }\n    setRoute(() => route);\n  };\n\n  const toggleModal = (): void => {\n    setIsProfileOpen((prevState) => !prevState);\n  };\n\n  return (\n    <div className=\"App\">\n      <Particles className=\"particles\" params={particlesOptions} />\n      <Navigation\n        isSignedIn={isSignedIn}\n        onRouteChange={onRouteChange}\n        toggleModal={toggleModal}\n      />\n      {isProfileOpen && (\n        <Modal>\n          <Profile\n            loadUser={loadUser}\n            toggleModal={toggleModal}\n            user={user}\n            stage={stage}\n          />\n        </Modal>\n      )}\n      {route === \"home\" ? (\n        <div id=\"LogoComponent\">\n          <Logo\n            image={faceDetectPic}\n            context={\"Face Recognition\"}\n            onRouteChangeObj={{\n              onRouteChange: onRouteChange,\n              route: \"faceDetection\",\n            }}\n          />\n          <Logo\n            image={graphPic}\n            context={\"coming soon..\"}\n            onRouteChangeObj={{ onRouteChange: onRouteChange, route: \"home\" }}\n          />\n        </div>\n      ) : route === \"faceDetection\" ? (\n        <div>\n          <Rank name={user.name} entries={user.entries} />\n          {imageUrl ? (\n            <FaceRecognition boxes={boxes} imageUrl={imageUrl} stage={stage} />\n          ) : null}\n          <ImageLinkForm\n            onInputChange={onInputChange}\n            onButtonSubmit={onButtonSubmit}\n          />\n        </div>\n      ) : route === \"signin\" ? (\n        loading ? (\n          <h1 className=\"f1 fw6 ph0 mh0\">Loading</h1>\n        ) : (\n          <Signin\n            onRouteChange={onRouteChange}\n            fetchProfile={fetchProfile}\n            stage={stage}\n          />\n        )\n      ) : (\n        <Register fetchProfile={fetchProfile} stage={stage} />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React, { useReducer, useState } from \"react\";\nimport PropTypes, { number } from \"prop-types\";\nimport \"./Profile.css\";\n\ninterface IProfileProps {\n  user: {\n    id: null | number;\n    name: string;\n    email: string;\n    entries: string;\n    joined: string;\n    age?: string;\n    pet?: string;\n  };\n  toggleModal(): void;\n  loadUser(user: {}): void;\n  stage: string;\n}\n\ninterface IProState {\n  name?: string;\n  age?: string;\n  pet?: string;\n}\n\ninterface IProAction {\n  type: \"NAME_CHANGE\" | \"AGE_CHANGE\" | \"PET_CHANGE\";\n  payload: string;\n}\n\nconst Profile: React.FC<IProfileProps> = ({\n  user,\n  toggleModal,\n  loadUser,\n  stage,\n}) => {\n  const [ageError, setAgeError] = useState(false);\n  const { id, name, age, pet } = user;\n\n  const formReducer: React.Reducer<IProState, IProAction> = (\n    ProState,\n    action\n  ) => {\n    switch (action.type) {\n      case \"NAME_CHANGE\":\n        return { ...ProState, name: action.payload };\n      case \"AGE_CHANGE\":\n        // @ts-ignore\n        if (isNaN(action.payload) === false) {\n          setAgeError(false);\n          return { ...ProState, age: action.payload };\n        } else {\n          if (!ageError) {\n            setAgeError(true);\n          }\n        }\n        return ProState;\n      case \"PET_CHANGE\":\n        return { ...ProState, pet: action.payload };\n      default:\n        return new Error(\"FormReducer type is not valid\");\n    }\n  };\n\n  const [ProState, dispatch] = useReducer(formReducer, {\n    name: name,\n    age: age,\n    pet: pet,\n  });\n\n  const onProfileSave = (data: IProState) => {\n    fetch(`http://${stage}/profile/${id}`, {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authentication:\n          window.sessionStorage.getItem(\"SmartBrainToken\") || \"no token\",\n      },\n      body: JSON.stringify({ formInput: data }),\n    })\n      .then((response: Response) => {\n        if (response.status === 200 || response.status === 304) {\n          toggleModal();\n          loadUser({ ...user, ...data });\n        } else {\n          alert(\"Something went wrong.. please try again later.\");\n        }\n      })\n\n      .catch(console.log);\n  };\n\n  return (\n    <div className=\"profile-modal\">\n      <article className=\"overflow-y-auto ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 center\">\n        <main className=\"pa4  w-80\">\n          <img\n            src=\"http://tachyons.io/img/logo.jpg\"\n            className=\"dib h3 w3\"\n            alt=\"avatar\"\n          />\n          <h1>{ProState.name || name}</h1>\n          <h4>{`Image submitted: ${user.entries}`}</h4>\n          <p>{`Member since: ${new Date(\n            user.joined || \"Who are you?\"\n          ).toLocaleDateString()}`}</p>\n          <hr />\n\n          <label className=\"mt2 fw6\" htmlFor=\"user-name\">\n            Name:\n          </label>\n          <input\n            className=\"pa2 ba w-100\"\n            placeholder={user.name}\n            type=\"text\"\n            name=\"user-name\"\n            id=\"name\"\n            onChange={(event) =>\n              dispatch({\n                type: \"NAME_CHANGE\",\n                payload: event.target.value,\n              })\n            }\n          />\n          <label className=\"mt2 fw6\" htmlFor=\"user-age\">\n            Age:\n          </label>\n          <input\n            className=\"pa2 ba w-100\"\n            placeholder={age || \"immortal!\"}\n            type=\"text\"\n            name=\"user-age\"\n            id=\"age\"\n            onChange={(event) =>\n              dispatch({\n                type: \"AGE_CHANGE\",\n                payload: event.target.value,\n              })\n            }\n          />\n          {ageError ? (\n            <p className=\"alert alert-warning\">Age needs to be a number</p>\n          ) : (\n            <p></p>\n          )}\n          <label className=\"mt2 fw6\" htmlFor=\"pet-name\">\n            Pet:\n          </label>\n          <input\n            className=\"pa2 ba w-100\"\n            placeholder={pet}\n            type=\"text\"\n            name=\"pet-name\"\n            id=\"pet\"\n            onChange={(event) =>\n              dispatch({\n                type: \"PET_CHANGE\",\n                payload: event.target.value,\n              })\n            }\n          />\n\n          <div\n            className=\"mt4 pa2\"\n            style={{ display: \"flex\", justifyContent: \"space-around\" }}\n          >\n            <button\n              onClick={() => onProfileSave(ProState)}\n              className=\"b pa2 grow pointer hover-white w-40 bg-light-red b--black-20\"\n            >\n              Save\n            </button>\n            <button\n              className=\"b pa2 grow pointer hover-white w-40 bg-light-blue b--black-20\"\n              onClick={toggleModal}\n            >\n              Cancel\n            </button>\n          </div>\n        </main>\n        <div onClick={toggleModal} className=\"modal-close\">\n          &times;\n        </div>\n      </article>\n    </div>\n  );\n};\n\nProfile.propTypes = {\n  toggleModal: PropTypes.func.isRequired,\n  loadUser: PropTypes.func.isRequired,\n  user: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    entries: PropTypes.string.isRequired,\n    joined: PropTypes.string.isRequired,\n    age: PropTypes.string.isRequired,\n    pet: PropTypes.string.isRequired,\n  }).isRequired,\n  stage: PropTypes.string.isRequired,\n};\n\nexport default Profile;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport \"tachyons\";\nimport Modal from \"./components/Modals/Modal\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nReactDOM.render(<Modal />, document.getElementById(\"modal-root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}